;;
;;  Copyright (C) 2019 Roman Pauer
;;
;;  Permission is hereby granted, free of charge, to any person obtaining a copy of
;;  this software and associated documentation files (the "Software"), to deal in
;;  the Software without restriction, including without limitation the rights to
;;  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
;;  of the Software, and to permit persons to whom the Software is furnished to do
;;  so, subject to the following conditions:
;;
;;  The above copyright notice and this permission notice shall be included in all
;;  copies or substantial portions of the Software.
;;
;;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
;;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
;;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
;;  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
;;  SOFTWARE.
;;

include llasm.llinc
include asm-calls.llinc

func SoundEngine_StartTimer
funcv SoundEngine_StopTimer uTimerID
funcv SoundEngine_DecodeMP3Stream *struc4
funcv SoundEngine_OpenMP3Stream *struc9

proc SoundEngine_StartTimer_asm2c public

; [esp      ] = return address

        Call_Asm_Stack0 SoundEngine_StartTimer

        Call_Asm_Return 0

endp ; end procedure SoundEngine_StartTimer_asm2c


proc SoundEngine_StopTimer_asm2c public

; [esp +   4] = uint32_t uTimerID
; [esp      ] = return address

        Call_Asm_Stack1_void SoundEngine_StopTimer

        Call_Asm_Return 0

endp ; end procedure SoundEngine_StopTimer_asm2c


proc SoundEngine_DecodeMP3Stream_asm2c public

; [esp +   4] = SE_struc_4 *struc4
; [esp      ] = return address

        Call_Asm_Stack1_void SoundEngine_DecodeMP3Stream

        Call_Asm_Return 0

endp ; end procedure SoundEngine_DecodeMP3Stream_asm2c


proc SoundEngine_OpenMP3Stream_asm2c public

; [esp +   4] = SE_struc_9 *struc9
; [esp      ] = return address

        Call_Asm_Stack1_void SoundEngine_OpenMP3Stream

        Call_Asm_Return 0

endp ; end procedure SoundEngine_OpenMP3Stream_asm2c

