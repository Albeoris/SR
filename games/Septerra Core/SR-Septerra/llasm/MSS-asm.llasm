;;
;;  Copyright (C) 2019 Roman Pauer
;;
;;  Permission is hereby granted, free of charge, to any person obtaining a copy of
;;  this software and associated documentation files (the "Software"), to deal in
;;  the Software without restriction, including without limitation the rights to
;;  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
;;  of the Software, and to permit persons to whom the Software is furnished to do
;;  so, subject to the following conditions:
;;
;;  The above copyright notice and this permission notice shall be included in all
;;  copies or substantial portions of the Software.
;;
;;  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
;;  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;;  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
;;  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;;  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
;;  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
;;  SOFTWARE.
;;

include llasm.llinc
include asm-calls.llinc

func ASI_startup_c
func ASI_shutdown_c
func ASI_stream_close_c *stream
func ASI_stream_process_c *stream, *buffer, request_size

proc ASI_startup_asm2c public

; [esp] = return address

        Call_Asm_Stack0 ASI_startup_c

        Call_Asm_Return 0

endp ; end procedure ASI_startup_asm2c


proc ASI_shutdown_asm2c public

; [esp] = return address

        Call_Asm_Stack0 ASI_shutdown_c

        Call_Asm_Return 0

endp ; end procedure ASI_shutdown_asm2c


proc ASI_stream_close_asm2c public

; [esp + 4] = void *stream
; [esp    ] = return address


        Call_Asm_Stack1 ASI_stream_close_c

        Call_Asm_Return 1

endp ; end procedure ASI_stream_close_asm2c


proc ASI_stream_process_asm2c public

; [esp + 3*4] = int32_t request_size
; [esp + 2*4] = void *buffer
; [esp +   4] = void *stream
; [esp      ] = return address


        Call_Asm_Stack3 ASI_stream_process_c

        Call_Asm_Return 3

endp ; end procedure ASI_stream_process_asm2c

